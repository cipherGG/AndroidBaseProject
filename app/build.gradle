apply plugin: 'com.android.application'

android {
    buildToolsVersion "25.0.2"
    compileSdkVersion 25 // 最高运行版本
    defaultConfig {
        targetSdkVersion 25 // 最高效果版本
        minSdkVersion 14 // 最低运行版本
        multiDexEnabled true // 允许分包
        applicationId "com.jiangzg.project" // 要和manifest一致
        versionCode 1
        versionName "1.0.0"
    }
    signingConfigs { // 签名信息
        jzg_debug {
            storeFile file('/Users/gg/Documents/mine/android/key/jiangzg_debug.jks')
            storePassword 'laojiang1'
            keyAlias 'jiangzg'
            keyPassword 'laojiang1'
        }
    }
    buildTypes { // 打包选项
        debug { // 测试
            signingConfig signingConfigs.jzg_debug // 设置签名信息
            minifyEnabled false // 混淆开关
            // 指定混淆规则文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release { // 正式
            signingConfig signingConfigs.jzg_debug // 可以只用一个签名信息
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    // 输出apk名称为app_1.0.1.apk
                    def fileName = "app_${defaultConfig.versionName}.apk"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }
    productFlavors { // 发布渠道
    }
    sourceSets { // 源码设置
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            jniLibs.srcDirs = ['libs'] // 指定lib库目录
        }
        instrumentTest.setRoot('tests') // 指定测试所在的路径
        debug.setRoot('build-types/debug') // 指定debug模式的路径
        release.setRoot('build-types/release') // 指定release模式的路径
    }
    compileOptions { // 编码/JDK等
        encoding "UTF-8"
    }
    lintOptions { // 编译的lint检查
        disable 'MissingTranslation' // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        abortOnError false // 移除lint检查的error
    }
    packagingOptions { // 解决jar包冲突
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INFTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    dexOptions { // 构建配置(加快编译速度)
        preDexLibraries true // 预先编译依赖库
        maxProcessCount 8 // 最大线程数
        javaMaxHeapSize "4g" // 最大堆大小
    }
    aaptOptions { // 过滤PNG图片检验
        cruncherEnabled = false
        useNewCruncher = false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile project(':AndroidBaseNative')
    compile project(':AndroidBaseView')
//    compile project(':AndroidBaseDepend')
    compile 'com.android.support.constraint:constraint-layout:1.0.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}
